{"ast":null,"code":"'use client';\n\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/scale-fade.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  exit: _ref => {\n    let {\n      reverse,\n      initialScale,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n    var _a;\n    return {\n      opacity: 0,\n      ...(reverse ? {\n        scale: initialScale,\n        transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n      } : {\n        transitionEnd: {\n          scale: initialScale,\n          ...(transitionEnd == null ? void 0 : transitionEnd.exit)\n        }\n      }),\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay)\n    };\n  },\n  enter: _ref2 => {\n    let {\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n    var _a;\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar ScaleFade = forwardRef(function ScaleFade2(props, ref) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    reverse = true,\n    initialScale = 0.95,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props;\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    initialScale,\n    reverse,\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      className: cx(\"chakra-offset-slide\", className),\n      ...scaleFadeConfig,\n      animate,\n      custom,\n      ...rest\n    })\n  });\n});\nScaleFade.displayName = \"ScaleFade\";\nexport { scaleFadeConfig, ScaleFade };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,UAAU;AACnB,SACEC,iBAEAC,cAEK;AACP,SAASC,kBAAkB;AAwEjB;AAnDV,IAAMC,WAAuC;EAC3CC,MAAMC,QAA8D;IAAA,IAA7D;MAAEC;MAASC;MAAcC;MAAYC;MAAeC;IAAM;IA7BnE;IA6B0E;MACtEC,SAAS;MACT,IAAIL,UACA;QAAEM,OAAOL;QAAcE,eAAeA,+CAAeL;MAAK,IAC1D;QAAEK,eAAe;UAAEG,OAAOL;UAAc,IAAGE,+CAAeL;QAAK;MAAE;MACrEI,aACEK,8CAAYT,SAAZ,YAAoBU,UAAUV,KAAKW,oBAAoBX,MAAMM,KAAK;IACtE;EAAA;EACAM,OAAOC,SAAuC;IAAA,IAAtC;MAAER;MAAeD;MAAYE;IAAM;IArC7C;IAqCoD;MAChDC,SAAS;MACTC,OAAO;MACPJ,aACEK,8CAAYG,UAAZ,YAAqBF,UAAUE,MAAMD,oBAAoBC,OAAON,KAAK;MACvED,eAAeA,+CAAeO;IAChC;EAAA;AACF;AAEO,IAAME,kBAA0C;EACrDC,SAAS;EACTC,SAAS;EACThB,MAAM;EACND;AACF;AAMO,IAAMkB,YAAYnB,WACvB,SAASmB,WAAUC,OAAOC,KAAK;EAC7B,MAAM;IACJC;IACAC,IAAIC;IACJpB,UAAU;IACVC,eAAe;IACfoB;IACAnB;IACAC;IACAC;IACA,GAAGkB;EACL,IAAIN;EAEJ,MAAMO,OAAOL,gBAAgBE,UAAUF,gBAAgB;EACvD,MAAMJ,UAAUM,UAAUF,gBAAgB,UAAU;EAEpD,MAAMM,SAAS;IAAEvB;IAAcD;IAASE;IAAYC;IAAeC;EAAM;EAEzE,OACE,mBAACV;IAAgB8B;IACdC,kBACC,mBAAC9B,OAAO+B,KAAP;MACCT;MACAI,WAAW5B,GAAG,uBAAuB4B,SAAS;MAC7C,GAAGT;MACJE;MACAU;MACC,GAAGF;IAAA,CACN;EAAA,CAEJ;AAEJ,CACF;AAEAP,UAAUY,cAAc","names":["cx","AnimatePresence","motion","forwardRef","variants","exit","_ref","reverse","initialScale","transition","transitionEnd","delay","opacity","scale","_a","withDelay","TRANSITION_DEFAULTS","enter","_ref2","scaleFadeConfig","initial","animate","ScaleFade","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","children","div","displayName"],"sources":["C:\\Users\\Admin\\node_modules\\@chakra-ui\\transition\\src\\scale-fade.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = forwardRef<HTMLDivElement, ScaleFadeProps>(\n  function ScaleFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nScaleFade.displayName = \"ScaleFade\"\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}